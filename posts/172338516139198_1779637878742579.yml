---
message: "دلوقتي بقالي فتره بتعلم js oop .. انا درست oop كويس بالسي شارب و حاولت اقرا
  في ال concepts بتاع ال oop  عامه علي قد ماقدر .. بحاول دايما اطبق اللي اتعلمته في
  الدوت نت علي js بحيث حاسس ان الموضوع مختلف ومش واضح معايا \nياريت لو حد عنده نصيحه
  او تريكات اخلي بالي منها او tutorial بخصوص الموضوع ده"
from:
  name: Ahmed Khalifa
  id: '1999765416908747'
type: status
created_time: '2018-03-11T18:35:16+0000'
updated_time: '2018-03-13T12:38:21+0000'
permalink_url: https://www.facebook.com/groups/egyptian.geeks/permalink/1779637878742579/
shares:
  count: 2
id: '172338516139198_1779637878742579'
reactions:
  data:
  - id: '1587898834629042'
    name: Ahmed Abou Elfotouh
    type: LIKE
  - id: '10215515935116102'
    name: Agk TF
    type: LIKE
  - id: '2004527742898448'
    name: Abdulrahman Zaki
    type: LIKE
  - id: '10155779296706638'
    name: Mohamed Shawky
    type: LIKE
  - id: '10211073885904196'
    name: Ahmed Shehta
    type: LIKE
  - id: '10155807929225700'
    name: Mohamed Samir Mohamed
    type: LIKE
  - id: '2042656142412014'
    name: Sam Muhammad
    type: LIKE
  - id: '2011515399069978'
    name: Mahmoud Ezzat
    type: LIKE
  - id: '10156435293931294'
    name: Ali Salem Korayem
    type: LIKE
  - id: '1553694648077470'
    name: Asma Rashwan
    type: LIKE
  - id: '10155397040511824'
    name: Mohamed Magdy
    type: LIKE
  paging:
    cursors:
      before: TVRBd01EQXlNalk0TWpFeU1UUTNPakUxTWpBNE5qY3pPVE02TWpVME1EazJNVFl4TXc9PQZDZD
      after: TlRnd09EazJPREl6T2pFMU1qQTNPVE01TlRRNk1qVTBNRGsyTVRZAeE13PT0ZD
comments:
  data:
  - created_time: '2018-03-11T18:40:16+0000'
    from:
      name: Diyaa Mahmoud
      id: '1559170364118742'
    message: الجافا سكربت عالم تاني متحاولش تطبق عليها اللي اتعلمته في الدوت نت...
      الأفضل تركز في مفاهيمها واسلوبها الخاص
    id: '1779730858733281'
  - created_time: '2018-03-11T18:45:31+0000'
    from:
      name: Amr ELsaqqa
      id: '10156301546469701'
    message: https://en.m.wikipedia.org/wiki/Prototype-based_programming
    id: '1779734938732873'
  - created_time: '2018-03-11T18:48:17+0000'
    from:
      name: Ibrahim Mohammed
      id: '1886120441698692'
    message: خش فى ال TypeScript و ال es7 و سيبك من جو ال prototype و الكلام اللى
      هيخليك تلف حوالين نفسك
    id: '1779737265399307'
  - created_time: '2018-03-11T18:58:11+0000'
    from:
      name: Ahmed Elgendy
      id: '816052901911267'
    message: فى كورس عظيم على يوديمى اسمه javascript understand the weird parts هتفهم
      منه oopjs كويس جدا وعموما هو شارح ال concepts كويس جدا
    id: '1779747495398284'
  - created_time: '2018-03-11T19:09:54+0000'
    from:
      name: Ahmed Ghoniem
      id: '10212376427419048'
    message: |-
      https://www.youtube.com/channel/UCO1cgjhGzsSYb1rsB4bFe4Q
      كويس جددددا
    id: '1779758548730512'
  - created_time: '2018-03-11T19:34:38+0000'
    from:
      name: Hosam G. Zewain
      id: '10215665676616561'
    message: "لو عاوز تفهم الاساسيات كويس في فيديوهات رائعة ل Douglas Crockford مبتكر
      JSON ومن احسن ممارسي الجافاسكربت ف العالم. \nهو بيشرح فيها كتابة\nJavaScript
      the good parts\nوبيتكلم عن مشاكلها واخطائها وازاي تتجنبها الخ. \nانا عن نفسي
      استفدت من فيديوهاته والكتاب بتاعه جداً\nاذا فهمت الاساسيات كويس هتحتاج تقرآ
      بعدها شوية عن es6 وخلاص هتبقي ممتاز"
    id: '1779777345395299'
  - created_time: '2018-03-11T20:11:16+0000'
    from:
      name: Rafael Adel
      id: '10156260406777122'
    message: معتقدش ينفع تطبق كل ال oop علي prototype based language زي js
    id: '1779805852059115'
  - created_time: '2018-03-11T20:14:26+0000'
    from:
      name: Mohamed Elsherif
      id: '10160105091405314'
    message: "فيه مجموعة كتب ممتازة اسمها\nYou don't know JS \nحتلاقيها موجودة مجانا
      على GitHub\nبس عموما ما تفكرش في JS انها object oriented language اصلا لانها
      مش object oriented"
    id: '1779808445392189'
  - created_time: '2018-03-11T20:24:53+0000'
    from:
      name: Hisham Fangary
      id: '10156660518155839'
    message: JS is a prototyping language, not an object oriented one. Meaning you
      can apply object oriented like concepts, like classes and inheritance, but you
      will be using JSs prototyping capabilities to do them.
    id: '1779816375391396'
  - created_time: '2018-03-11T20:44:48+0000'
    from:
      name: Mohamed Nady
      id: '10155293228608733'
    message: مش عارف اى فيرجن من js  بتتعلم حاليا بس عموما عشان ال  js ال fully browsers
      supported  منقدرش نعتبرها full oop language ولكن !!! اتت ES6 بما ينقص ال js  وبالفعل
      لو انت شغال ب  frontend framwork زى Angular بتستخدم ES6 features . ممكن تشوف
      دا   https://codecraft.tv/courses/angular/es6-typescript/overview/
    id: '1779829385390095'
  - created_time: '2018-03-11T21:18:31+0000'
    from:
      name: Hussein Osman
      id: '10215804044119360'
    message: "الجافا سكريبت مش بدعم الاوبجيكت اوريانت بشكل موثق \nولكن بنقدر نحاكي
      الاوبجيكت اوريند \nبطرق مختلفه بأننا نستخدم objects \nVariable function , self
      invocation function"
    id: '1779851798721187'
  - created_time: '2018-03-11T21:19:22+0000'
    from:
      name: Ibraheem Osama
      id: '10155206310513093'
    message: |-
      بص يا سيدي دا فيديو كنت عامله بالعربي بيتكلم علي الinheritance في الجافاسكريبت
      https://youtu.be/AruivYd47YQ
      ان شاء الله ينفعك
    id: '1779852422054458'
  - created_time: '2018-03-11T21:27:11+0000'
    from:
      name: Medhat Dawoud
      id: '1615379065212042'
    message: "هو الموضوع في الجافاسكريبت مختلف بشكل كبير عن السي شارب .. بس لو خطتك
      بعد ماتتعلم جافاسكريبت انك تكتب حاجة زي angular مثلا .. يبقى اتعلم TypeScript
      وهي تقريبا زي السي شارب بالظبط مع حبة تعديلات بسيطة \U0001F602"
    id: '1779858055387228'
  - created_time: '2018-03-11T21:46:52+0000'
    from:
      name: Tarek Dawoud
      id: '10156109957694861'
    message: |-
      بالنسبة لسؤالك بالتحديد:

      https://stackoverflow.com/questions/107464/is-javascript-object-oriented
    id: '1779870398719327'
  - created_time: '2018-03-11T22:10:36+0000'
    from:
      name: Esso de Nasr
      id: '402301146892668'
    message: u just need to take this course to better understand JS OOP ! it's excellent
      ! https://eg.udacity.com/course/object-oriented-javascript--ud015
    id: '1779885792051121'
  - created_time: '2018-03-11T23:23:50+0000'
    from:
      name: Mohamed Fawzy
      id: '1694501647276709'
    message: You can check both Udacity JS OOP course and Udemy JS understand the
      weird parts. There is a part explained by the founder of hack reactor in Udacity
      course.
    id: '1779934145379619'
  - created_time: '2018-03-12T11:47:40+0000'
    from:
      name: Peter Wilson
      id: '10212791113905949'
    message: لو عايز تطبق oop فى ال JavaScript فراى انك تعمل دا فى ال ECMAScript 6
      دى النسخة الجديدة من الجافاسكربت وهتلاقيه فيها كل المفاهيم اللى فى دماغك عن
      ال OOP لكن لو حاولت تطبقها على ال js العادية هتلاقى الفكر مختلف شوية
    id: '1780458285327205'
  - created_time: '2018-03-12T12:58:15+0000'
    from:
      name: Samar Abdelhamid
      id: '10215412126240955'
    message: اتعلم typscript
    id: '1780516448654722'
  - created_time: '2018-03-12T16:48:49+0000'
    from:
      name: Hisham Fangary
      id: '10156660518155839'
    message: |-
      Here is a crash course summary:

      Understading WHAT Javascript is, will help you alot when applying OOP principles to JS.
      Like I said above, JS is a prototyping language, not an OOP one.
      But you can use prototyping features to create OOP like features.

      Here is how you declare a class named Car and instantiating an object from it in JS:

      /********/
      function Car (){
         console.log("Car Object initiated");
      }

      var car1 = new Car();
      /********/

      looks like a regular function, doesn't it? Except you are instantiating it like a class!

      That's because almost everything in JS is an object, even arrays and functions.
      Natives are not objects, BUT, they are automatically wrapped in an object so you can have access to their features in an object like manner: ex: string1.length

      So, here is how you create static method for that class and running it:

      /********/
      Car.startCar = function (){
          console.log("Car Started");
      };

      Car.startCar();
      /********/

      So far so good.
      Now to create a non-static method, this is where prototyping comes in:

      /********/
      Car.prototype.startCar = function (){
          console.log("Car Started");
      };

      car1.startCar();
      /********/

      Finally, to create properties inside the object and access them, use the this keyword:

      /********/
      function Car (name){
         this.name = name;
         console.log("Car Object initiated");
      }

      Car.prototype.startCar = function (){
          console.log("Car "+this.name+" Started");
      };

      var car1 = new Car("Volvo");
      car1.startCar();
      /********/

      If you are interested, I can write a quick crash comment on inheritence as well.
    id: '1780725021967198'
  paging:
    cursors:
      before: WTI5dGJXVnVkRjlqZAFhKemIzSTZANVGMzT1Rjek1EZAzFPRGN6TXpJNE1Ub3hOVEl3Tnprek5qRTMZD
      after: WTI5dGJXVnVkRjlqZAFhKemIzSTZANVGM0TURjeU5UQXlNVGsyTnpFNU9Eb3hOVEl3T0Rjek16STUZD
