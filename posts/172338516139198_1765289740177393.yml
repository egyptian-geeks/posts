---
message: "So i red this in a node.js book and wanted to know what u guys think about
  it !!! \n\n\"Another characteristic of many Node.js modules is the fact that they
  are created to be used rather than extended. Locking down the internals of a module
  by forbidding any possibility of an extension might sound inflexible, but it actually
  has the advantage of reducing the use cases, simplifying its implementation, facilitating
  it's maintenance, and increasing its usability \".\n\nMY OPINION FOR NOW \n\n    we
  do have servers for Node.js apps like Hapi where people write plugins for it\n    so
  they practically extend the functionality of the server using this plugins . \n
  \   which totally goes against this rule . \n\n   but at the same time plugins are
  modules that do one thing and one thing well . \n   You don't want to extend it's
  functionality, u just need it to do this one thing very \n   well . \n\nin short
  i think it's a trade of reusability  vs flexibility"
from:
  name: Hesham Adel
  id: '798912850310002'
type: status
created_time: '2018-02-26T08:11:37+0000'
updated_time: '2018-02-26T13:53:07+0000'
permalink_url: https://www.facebook.com/groups/egyptian.geeks/permalink/1765289740177393/
id: '172338516139198_1765289740177393'
comments:
  data:
  - created_time: '2018-02-26T08:58:03+0000'
    from:
      name: Eiad Amr
      id: '1786979848265063'
    message: What is the name of the book?
    id: '1765315546841479'
  - created_time: '2018-02-26T09:32:55+0000'
    from:
      name: Mahmoud Hossam
      id: '1360912124012585'
    message: This is exactly why every node.js project has millions of tiny little
      modules as dependencies which results in ridiculously long build times.
    id: '1765333220173045'
  - created_time: '2018-02-26T11:54:37+0000'
    from:
      name: Ibraheem Osama
      id: '10155206310513093'
    message: "I’m not a node expert but I’m core team to OS libraries have more than
      half million downloads.\nEvery time we seal something we got a lot of complaints
      from  library users who wants to extend a small functionality without having
      to send a PR that will eventually get rejected. In many time when we try to
      extend other libraries and  we couldn’t we complain as well \U0001F60A\nSome
      Apis and class should be sealed like accessing HW stuff or doing atomic ops
      but if you’re creating a layout control why on earth would you stop people from
      override a tiny or big piece of functionality !!\nI believe modules should be
      extendable and if overriding something would case any issues like performance
      it should be documented and left for developers to take the best decision."
    id: '1765431460163221'
  - created_time: '2018-02-26T12:30:48+0000'
    from:
      name: أحمد محمود محمد عبدالوهاب
      id: '10155226291481186'
    message: actually hapi/express modules lick their internals. they just expose
      callbacks to run on the requests. I dont see how is that related to what is
      written in the book :/
    id: '1765456363494064'
  paging:
    cursors:
      before: WTI5dGJXVnVkRjlqZAFhKemIzSTZANVGMyTlRNeE5UVTBOamcwTVRRM09Ub3hOVEU1TmpNMU5EZA3oZD
      after: WTI5dGJXVnVkRjlqZAFhKemIzSTZANVGMyTlRRMU5qTTJNelE1TkRBMk5Eb3hOVEU1TmpRNE1qUTUZD
