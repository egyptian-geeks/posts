---
message: 'Tomorrow lib: Magic decorator syntax for asynchronous code in Python'
link: https://github.com/madisonmay/Tomorrow?utm_source=Python+Weekly+Newsletter&utm_campaign=bde289d72f-Python_Weekly_Issue_203_August_6_2015&utm_medium=email&utm_term=0_9e26887fc5-bde289d72f-312682145
from:
  name: Anas Rabei
  id: '771652519692786'
type: link
picture: https://external.xx.fbcdn.net/safe_image.php?d=AQA9EvpVdtU72fpu&w=130&h=130&url=https%3A%2F%2Favatars0.githubusercontent.com%2Fu%2F2645393%3Fv%3D3%26s%3D400&cfs=1&sx=0&sy=0&sw=250&sh=250&_nc_hash=AQB0L5qqjKrEtVbB
created_time: '2015-08-13T05:20:37+0000'
updated_time: '2015-08-13T10:28:32+0000'
name: madisonmay/Tomorrow
permalink_url: https://www.facebook.com/groups/egyptian.geeks/permalink/989215434451498/
id: '172338516139198_989215434451498'
comments:
  data:
  - created_time: '2015-08-13T05:35:53+0000'
    from:
      name: Khaled M. Diab
      id: '10215626626127168'
    message: |-
      It uses ThreadPoolExecutor which is not really concurrent in CPython due to GIL. A solution would be using ProcessPoolExecutor (https://docs.python.org/3/library/concurrent.futures.html#processpoolexecutor), which seems having a problem (https://github.com/madisonmay/Tomorrow/issues/1)

      I would employ multiprocessing module by myself, and manage my pools as I need...
    id: '989218111117897'
  - created_time: '2015-08-13T05:38:53+0000'
    from:
      name: Khaled M. Diab
      id: '10215626626127168'
    message: "Second solution would be using PyPy and not CPython. I am not sure if
      \"futures\" package supports PyPy though. \nNote: \"futures\" package is concurrent.future
      backport in python 2.7"
    id: '989218597784515'
  - created_time: '2015-08-13T10:28:32+0000'
    from:
      name: Mohammad Tayseer
      id: '10155970088481341'
    message: PyPy has GIL as well
    id: '989301164442925'
  paging:
    cursors:
      before: WTI5dGJXVnVkRjlqZAFhKemIzSTZAPVGc1TWpFNE1URXhNVEUzT0RrM09qRTBNemswTkRReE5UTT0ZD
      after: WTI5dGJXVnVkRjlqZAFhKemIzSTZAPVGc1TXpBeE1UWTBORFF5T1RJMU9qRTBNemswTmpFM01UST0ZD
attachments:
  data:
  - description: Tomorrow - Magic decorator syntax for asynchronous code in Python
    media:
      image:
        height: 250
        src: https://external.xx.fbcdn.net/safe_image.php?d=AQBEJB0zDSxFv2dK&w=250&h=250&url=https%3A%2F%2Favatars0.githubusercontent.com%2Fu%2F2645393%3Fv%3D3%26s%3D400&cfs=1&sx=0&sy=0&sw=250&sh=250&_nc_hash=AQAlPBboozVuFO1L
        width: 250
    target:
      url: https://l.facebook.com/l.php?u=https%3A%2F%2Fgithub.com%2Fmadisonmay%2FTomorrow%3Futm_source%3DPython%2BWeekly%2BNewsletter%26utm_campaign%3Dbde289d72f-Python_Weekly_Issue_203_August_6_2015%26utm_medium%3Demail%26utm_term%3D0_9e26887fc5-bde289d72f-312682145&h=ATMTqpyKbuKOBJlhgWvpCswesmX-eJLMsUTbX3fhoiySy8dGThfTT3CaF92xvl1s4yrLygK-RC-jRfwt4yngDfRmqvQgN0PEFVmTPxTzBNyb5bOzhjJ4&s=1
    title: madisonmay/Tomorrow
    type: share
    url: https://l.facebook.com/l.php?u=https%3A%2F%2Fgithub.com%2Fmadisonmay%2FTomorrow%3Futm_source%3DPython%2BWeekly%2BNewsletter%26utm_campaign%3Dbde289d72f-Python_Weekly_Issue_203_August_6_2015%26utm_medium%3Demail%26utm_term%3D0_9e26887fc5-bde289d72f-312682145&h=ATMTqpyKbuKOBJlhgWvpCswesmX-eJLMsUTbX3fhoiySy8dGThfTT3CaF92xvl1s4yrLygK-RC-jRfwt4yngDfRmqvQgN0PEFVmTPxTzBNyb5bOzhjJ4&s=1
