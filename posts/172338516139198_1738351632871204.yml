---
message: "Slam All, \n\nIn a big project with thousands of users which is developed
  in Spring and Angular 2 or whatever you'd like to call , I'm facing a critical issue
  . \n\nAs example I have form with 10 fields , each field has a complex validation
  , so I hit the server 10 timed to validate , for just 100 users working concurrently
  , the server will receive 1 thousands of hits .\n\nSo the question is :\nWhat are
  the best practices which can tune this issue or let's call it the recommended workarounds
  ? \n\nThanks in advance for your supports."
from:
  name: Mohamed Sweelam
  id: '1987222834640127'
type: status
created_time: '2018-01-30T17:20:52+0000'
updated_time: '2018-01-31T19:18:37+0000'
permalink_url: https://www.facebook.com/groups/egyptian.geeks/permalink/1738351632871204/
id: '172338516139198_1738351632871204'
reactions:
  data:
  - id: '871016873079772'
    name: Marwan Ahmed
    type: LIKE
  - id: '1466247800164499'
    name: Mosaab Ahmed
    type: LIKE
  - id: '1620183618049194'
    name: Ahmed Taha
    type: LIKE
  - id: '1975748132439825'
    name: Tarek Mahmoud
    type: LIKE
  - id: '2101901136700019'
    name: Islam Mansour
    type: LIKE
  - id: '1862430883768966'
    name: Ahmed Galal
    type: LIKE
  - id: '158547971463325'
    name: Mohamed Mohamedy
    type: LIKE
  - id: '10208334901809689'
    name: Waleed Osama
    type: LIKE
  - id: '1791277350884061'
    name: Mostafa Alaa Mohamed
    type: LIKE
  paging:
    cursors:
      before: TVRBd01EQTFNVFEwTURJME5EWTRPakUxTVRjM05UYzFPREE2TWpVME1EazJNVFl4TXc9PQZDZD
      after: TVRBd01EQXdNRFUwTkRBMk5EY3hPakUxTVRjek16TXdNakU2TWpVME1EazJNVFl4TXc9PQZDZD
comments:
  data:
  - created_time: '2018-01-30T17:31:36+0000'
    from:
      name: Seif Hatem
      id: '10213015857764534'
    message: i don’t think this is the best option but you may validate all fields
      once while submitting
    id: '1738385792867788'
  - created_time: '2018-01-30T17:41:52+0000'
    from:
      name: Eyad AlBahi
      id: '10159879507655084'
    message: |-
      Can't you do all fields' validations with jscript at the client side before submitting? If you are forced to validate on the server, you should validate the whole page content after submission.

      One more point: from a security prespective, the best practice is to do as much validation on the client side and away from your server as possible, specially for stopping text fields' attacks like sql injections before it reaches your server. Only perform on your server the validations that require queries to the backend and even in this case it is better to proxy your traffic to another middle server for any validation filtering before forwarding to the business logic or backend.

      A good simple example for preventing sql injection at the client side via jscript is to replace any text field contents " ' " symbol with any other non-common character like ♤ or anything else and store this in ur DB. When u send the data back to ur client you replace this back with the " ' " that the client has put in the first place. So that the client does not feel any impact and you still protect yourself. However, you still do a validation for sql injection at the server side too, just in case the client tampers with the content on its way to your server. The jscript validation on the client is a best effort for preventing attacks but this does not replace the protection on the server side. Never trust the client even if you provided him the original content. He can change it.
    id: '1738393099533724'
  - created_time: '2018-01-30T18:37:11+0000'
    from:
      name: Ahmed Amr Farid
      id: '10155859538230336'
    message: |-
      you can double validate, client and server side validation this way the chances of errors is reduced considerably. and then you dont have to validate each input at the server separately, instead validate them all together...
      Another option is to cluster and load balance the servers...
      hope this helps.
    id: '1738434839529550'
  - created_time: '2018-01-30T19:49:27+0000'
    from:
      name: Hesham Desouky
      id: '10215011048531592'
    message: Client side valuation as much as you can. What kind of valuation are
      you using? Is this requires any data or logic check?
    id: '1738486506191050'
  - created_time: '2018-01-30T20:21:53+0000'
    from:
      name: Aly Saleh
      id: '10157135743444899'
    message: "Just one point. For a 100 users working concurrently you only need 100
      requests not 1000. \nBecause you either \n1- create a request that validates
      all fields at once \n2- Or when a user changes in a field, and a user cannot
      change the 10 fields at once.\n\nOne more thing client sode validation is good
      but you cannot depend on it. A simple hack for the request to the server can
      bypass the validation"
    id: '1738514239521610'
  - created_time: '2018-01-30T20:53:37+0000'
    from:
      name: Sameh Selim
      id: '1907240172924468'
    message: |-
      Where is the load :) this is no load to a webserver. r u facing high cpu, ram, sql ? What is the bottleneck ?

      How many concurrent users do u have ? What is the average request processing time ?
    id: '1738543206185380'
  - created_time: '2018-01-30T21:16:13+0000'
    from:
      name: Momen Al Zalabany
      id: '10160388991030144'
    message: do you need to validate fields to existent dataset in db ? other wise
      then do it client side only. server side should validate only final form submit.and
      this occur at model level
    id: '1738567476182953'
  - created_time: '2018-01-30T22:00:01+0000'
    from:
      name: Mohamed Shaaban
      id: '10156259295924301'
    message: |-
      As most of the guys suggested, as long as the inline field validation doesn't require server calls, do it on the client-side and do it all at once again on server-side

      One approach is to have JSON schema for all form fields which you can use on client (using tv4 for instance) and same/similar library on server-side
    id: '1738599969513037'
  - created_time: '2018-01-30T22:02:54+0000'
    from:
      name: Mohamed Shaaban
      id: '10156259295924301'
    message: And if inline validation with server is a must, consider doing some sort
      of request-throttling to not hit the server for each character change
    id: '1738602259512808'
  - created_time: '2018-01-30T22:10:54+0000'
    from:
      name: Elawady Elsayd
      id: '1716405828399348'
    message: |-
      انت شغال على مشروع كبير وخايف من المستخدمين العاديين امال هتعمل اية مع حد هيهزر معاك ب DoS دي نقطة.
      النقطة التانية انت لازم توضح ليه هتعمل request لكل input ليه مش كلهم في request واحد؟!
    id: '1738608939512140'
  - created_time: '2018-01-30T22:21:22+0000'
    from:
      name: Amr Soliman
      id: '1573186529416659'
    message: |-
      If the field validations are actually complex enough to need to be run against the backend server (verify validity of a  unique identifier or whatever) I would create a separate API for every validation process which would simplify the workload on the server and add up a debounce delay on the validators to make sure the validation request to the API is delayed as much as possible and probably only happens after the user has moved on to another field to minimize the number of possible requests to the server
      Side note - there is probably a better way to replicate the validation process on the backend for most of the fields
      You should definitely focus your validations on the client-side as long as we're not talking about something as vital and unique as an ID which would be a primary key somewhere on the DB
    id: '1738616732844694'
  - created_time: '2018-01-30T23:00:10+0000'
    from:
      name: Mohammad Helmy
      id: '10155848201515605'
    message: Run all validations that don't require calling the server first on client
      with JavaScript.  Then run all server validations when form is submitted. If
      you have to run some server validations with input changes or whatever. Cach
      some data on client to run these validations on client.
    id: '1738643316175369'
  - created_time: '2018-01-31T19:18:35+0000'
    from:
      name: Mahmoud El Shaffie
      id: '723368071200557'
    message: It is all about tradeoffs evaluation, it depends on priority of related
      ux requirements, and your computing cost. In line validation to provide user
      with guidance, to enhance his experience. It very usefull in case of, one-time
      task just as mail registeration, but i don't think that it convenient with daily
      repetitive task. Controlling fields by providing filtered data it will be more
      convenient.
    id: '1739486869424347'
  paging:
    cursors:
      before: WTI5dGJXVnVkRjlqZAFhKemIzSTZANVGN6T0RNNE5UYzVNamcyTnpjNE9Eb3hOVEUzTXpNek5EazMZD
      after: WTI5dGJXVnVkRjlqZAFhKemIzSTZANVGN6T1RRNE5qZAzJPVFF5TkRNME56b3hOVEUzTkRJMk16RTIZD
