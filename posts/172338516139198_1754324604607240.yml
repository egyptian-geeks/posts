---
message: |-
  تأثير تقسيم الفرق على المشروع
  -------------------------------
  لما بيكون عندنا مشروع ضخم و نيجي نقسمه لمكونات صغيرة modules عشان نعرف نسيطر عليه، بيبقى عندنا كذا طريقة للتقسيم، زي مثلا إننا نجمع الوظائف اللي قريبة من بعضها مع بعض، أو إننا نفصل الأجزاء المرتبطة بأنظمة قديمة legacy systems لحالها، أو إننا نخلي الحاجات اللي بتتكامل integrates مع مكونات خارجية 3rd party components على جنب لوحدها. لكن الحقيقة فيه حاجة الناس مش بيدوها حقها، وربما يكون ليها أثر أكبر من كل ده، وهي الهيكل الإداري أو تقسيم الفرق اللي بتشتغل في المشروع، و قربهم أو بعدهم عن ببعض.
from:
  name: سامح دعبس
  id: '2022490591345439'
type: status
created_time: '2018-02-15T18:54:31+0000'
updated_time: '2018-02-22T15:05:03+0000'
permalink_url: https://www.facebook.com/groups/egyptian.geeks/permalink/1754324604607240/
shares:
  count: 19
id: '172338516139198_1754324604607240'
reactions:
  data:
  - id: '983585495143172'
    name: Mohamed Zahran
    type: LIKE
  - id: '10160030835075061'
    name: Fady Morris Milad
    type: LIKE
  - id: '10155903911855943'
    name: Ahmed Soliman
    type: LIKE
  - id: '10156102251489328'
    name: Dina Ibrahim
    type: LIKE
  - id: '1952194655109570'
    name: Sarah Ahmed El-moukadem
    type: LIKE
  - id: '1965979727002672'
    name: Hadeer Harfoush
    type: LIKE
  - id: '10155826343095272'
    name: Mahmoud Moustafa
    type: LIKE
  - id: '1545538692229944'
    name: Majd Latah
    type: LIKE
  - id: '10213813332780281'
    name: أحمد سعيد
    type: LIKE
  - id: '871016873079772'
    name: Marwan Ahmed
    type: LIKE
  - id: '1818224478190849'
    name: Yousef Mahmoud
    type: LIKE
  - id: '1805137162832273'
    name: Mohamed Ali
    type: LIKE
  - id: '1480959738698709'
    name: Hossam Elsaily
    type: LIKE
  - id: '10155907304990540'
    name: مصطفى منصور
    type: LIKE
  - id: '10156325646928623'
    name: Ahmed AMaksoud
    type: LIKE
  - id: '887911344716178'
    name: Ahmed Ramzy
    type: LIKE
  - id: '10155104480222414'
    name: Asser El-Fouly
    type: LIKE
  - id: '1211125179022456'
    name: Ibrahim Hamed
    type: LIKE
  - id: '1782800278437536'
    name: Aya S. ABdo
    type: LIKE
  - id: '1864838400255982'
    name: Abdelwahab Mahmoud
    type: LIKE
  - id: '1815731621771899'
    name: Ahmed Abdel Salam
    type: LIKE
  - id: '399264287188477'
    name: Ahmed Fareed
    type: LIKE
  - id: '145220886143035'
    name: Omar AbdelFattah
    type: LIKE
  - id: '664166063973912'
    name: Mahmoud Mohamed
    type: LIKE
  - id: '10215729686174345'
    name: Hamed Moustafa
    type: LIKE
  - id: '1030487477090699'
    name: Mohamed Kotb
    type: LIKE
  - id: '1811551685586388'
    name: Ahmed Mudhar
    type: LIKE
  - id: '1859829507362556'
    name: Hadeel Mohamed
    type: LIKE
  - id: '10211072612477910'
    name: Mohamed Hafez Abdallah
    type: LIKE
  - id: '1801341666572145'
    name: GeDa
    type: LIKE
  - id: '10215159051112706'
    name: Mohamed Bauomey
    type: LIKE
  - id: '1853777334634345'
    name: Mohamed Fathalla
    type: LIKE
  - id: '1979848165376268'
    name: مصطفى يحيي
    type: LIKE
  - id: '10214609459461204'
    name: Mohamed Momen
    type: LIKE
  - id: '1571159766293275'
    name: Yasser Sobhy
    type: LIKE
  - id: '1601859629894179'
    name: Jihad Hussein
    type: LIKE
  - id: '1580453105383888'
    name: Ahmed Sakr
    type: LIKE
  - id: '10214882858414210'
    name: Ibrahim Ali
    type: LIKE
  - id: '10156278361076019'
    name: Assem Awad
    type: LIKE
  - id: '10159847733870510'
    name: Mohammed Hashish
    type: LIKE
  - id: '1722658717785442'
    name: Abd El Rhaman Ezzat
    type: LOVE
  - id: '10211400895684436'
    name: Khalid Mohamed Al Wakeel
    type: LIKE
  - id: '1703823479655702'
    name: أحمد أبوبكر
    type: LIKE
  - id: '10156198439243189'
    name: Ahmed Galal
    type: LIKE
  - id: '1864705780206703'
    name: Youssef Ali
    type: LIKE
  - id: '10156020325916241'
    name: Musa Hamza
    type: LIKE
  - id: '1839847129392711'
    name: Said Dahy
    type: LIKE
  - id: '1982406812082146'
    name: Ahmed Mahmoud Mahmoud Hussien
    type: LIKE
  - id: '979947695491636'
    name: Mohamed Saleh
    type: LIKE
  - id: '10215011048531592'
    name: Hesham Desouky
    type: LIKE
  - id: '1824520801181678'
    name: محمد علاء الدين
    type: LIKE
  - id: '10156223826832269'
    name: Ameer Adel
    type: LIKE
  - id: '535005166886357'
    name: أبو مالك القصير
    type: HAHA
  - id: '1810879308923189'
    name: Amr El Sayed
    type: LIKE
  - id: '1561453373962249'
    name: Ahmed Khalil
    type: LIKE
  - id: '10208478691244351'
    name: Mohamad Nabih
    type: LIKE
  - id: '1585067104922792'
    name: Ahmed M. Ali
    type: LIKE
  - id: '190950871652388'
    name: Abdelrahman Essam
    type: LIKE
  - id: '10159815172670696'
    name: Youssef Goher
    type: LIKE
  - id: '10214177798774740'
    name: Ibrahim Nafea
    type: LIKE
  - id: '1874895892543707'
    name: محمد المهدى
    type: LIKE
  paging:
    cursors:
      before: TVRBd01EQTBOelV4T1RJME1UQXhPakUxTWpFeE1qSTFOakU2TWpVME1EazJNVFl4TXc9PQZDZD
      after: TVRBd01EQXdOams1TkRNNE5ESTBPakUxTVRnM01qQTVNekE2TWpVME1EazJNVFl4TXc9PQZDZD
comments:
  data:
  - created_time: '2018-02-15T20:10:13+0000'
    from:
      name: Hesham Desouky
      id: '10215011048531592'
    message: Micro services + ddd + standardized work protocol and timely Integration
      testing are core success factors
    id: '1754404704599230'
  - created_time: '2018-02-15T22:01:56+0000'
    from:
      name: Menna Massoud
      id: '10211324526245899'
    message: Heba Massoud
    id: '1754471371259230'
  - created_time: '2018-02-15T23:35:23+0000'
    from:
      name: Mahmoud Ebn Hakam
      id: '799599943582033'
    message: Very impresive
    id: '1754532384586462'
  - created_time: '2018-02-16T07:39:33+0000'
    from:
      name: Ahmed Amr Farid
      id: '10155859538230336'
    message: الحل هنا هو فصل الهيكل الاداري للشركه اللي بيكون ثابت و مستمر، عن الهيكل
      الاداري للمشروع نفسه، بمعني ان الشخص اللي ممكن يكون ليه مدير معين في مكان معين،
      في المشروع ده و جوه ال scope بتاعه ممكن يكون ليه مدير تاني، و ده جربته في مشروع
      كبير الي حد ما، و كانت نتيجته ظريفه، المهم ما يحصلش تداخل او تعارض بين المنصبين
      و لا المدير الدائم و المؤقت و ده الي حد ما سهل...
    id: '1754813531225014'
  - created_time: '2018-02-16T09:37:41+0000'
    from:
      name: Yasser Shaheen
      id: '196883704381325'
    message: "مايكروسوفت ماسكين المسدسات لبعض ، ده لو حد فرقع كيس شيبسي بس جنبهم هتبقى
      مجزرة \U0001F602\U0001F602\U0001F602"
    id: '1754882334551467'
  - created_time: '2018-02-16T10:26:57+0000'
    from:
      name: Mohamed Eltantawi
      id: '10160105091695314'
    message: مصر
    id: '1754921037880930'
  paging:
    cursors:
      before: WTI5dGJXVnVkRjlqZAFhKemIzSTZANVGMxTkRRd05EY3dORFU1T1RJek1Eb3hOVEU0TnpJMU5ERTAZD
      after: WTI5dGJXVnVkRjlqZAFhKemIzSTZANVGMxTkRreU1UQXpOemc0TURrek1Eb3hOVEU0TnpjMk9ERTQZD
attachments:
  data:
  - description: |-
      تأثير تقسيم الفرق على المشروع
      -------------------------------
      لما بيكون عندنا مشروع ضخم و نيجي نقسمه لمكونات صغيرة modules عشان نعرف نسيطر عليه، بيبقى عندنا كذا طريقة للتقسيم، زي مثلا إننا نجمع الوظائف اللي قريبة من بعضها مع بعض، أو إننا نفصل الأجزاء المرتبطة بأنظمة قديمة legacy systems لحالها، أو إننا نخلي الحاجات اللي بتتكامل integrates مع مكونات خارجية 3rd party components على جنب لوحدها. لكن الحقيقة فيه حاجة الناس مش بيدوها حقها، وربما يكون ليها أثر أكبر من كل ده، وهي الهيكل الإداري أو تقسيم الفرق اللي بتشتغل في المشروع، و قربهم أو بعدهم عن ببعض.

      أحد المشاريع الكبيرة اللي اشتغلت فيها كان مخطط إن الفريق يكون مقسم لفرق فرعية، كل فريق فرعي شغال على جزء من المشروع، و فيه فريق فيهم مسئول عن تنسيق التعديلات بين الفرق دي، بجانب مسئوليته عن جزء من المشروع. وطبعا كلهم شغالين على نفس الكود، بس كل فريق منهم شغال على فرع branch من الكود منعزل عشان نضمن إن شغل الفرق ما بيبوظش شغل الفرق التانية. اللي حصل إن الفريق المسئول عن تنسيق التعديلات غرق في الجزء اللي هو مسئول عنه زي بقية الفرق، و ما بقيناش نجمع التعديلات merging changes لفترة طويلة، و من حين لآخر كانت بتظهر مشاكل إن فيه فريق عدل حاجات في قاعدة البيانات المشتركة من غير ما ينسق مع الفرق التانية فيسبب لها مشكلة. وزاد الطين بلة إن الفرق الفرعية اتقسمت إداريا وكل فريق بقى يتبع لمدير مشروعات مختلف، وبقى كل مشروع ليه أولوياته اللي مش بالضرورة تتوافق مع أولويات الفرق التانية. وفضلنا نأجل تجميع التعديلات لفترة لا بأس بها لغاية لما جه الموت لتارك الصلاة، واضطررنا نجمع الكود المبعثر، وطبعا كما هو متوقع، أخدت وقت كبير جدا، وفيه تعديلات راحت، وطلعنا بنتيجة إن الشغل بالطريقة دي مش هاينفع يستمر كده.

      سنة 1967 فيه واحد اسمه ملفن كونواي Melvin Conway قال -ما معناه - إن المؤسسات لما بتيجي تصمم أي نظام، بيطلع التصميم بتاعهم مطابق لهيكل تقسيم الفرق و إزاي بيتواصلوا مع بعض. وده نص كلامه:
      Any organization that designs a system (defined broadly) will produce a design whose structure is a copy of the organization's communication structure.
      سنة 1975 فريدريك بروكس Frederick Brooks في كتابه الشهير The Mythical Man-Month خد الكلام ده وسماه قانون كونواي Conway's Law وبعد كده الكلام ده انتشر بالاسم ده.
      فيه دراسات اتعملت بعد كده على الفكرة دي، منها دراسة عملتها مدرسة هارفارد للأعمال Harvard Business School سنة 2007، وقارنوا في الدراسة دي بين أكواد بعض المشاريع بتقوم بنفس الوظيفة، واكتشفوا إن البرامج مفتوحة المصدر اللي طورها مبرمجون متفرقون تميل لتكون أحسن تقسيما و أقل اعتمادية فيما بين أجزائها loosely-coupled وعلى العكس من ذلك البرامج اللي طورها فريق واحد متفرغ للمشروع أقرب ما تكون لوحدة واحدة monolith والاعتمادية فيما بين أجزائها كبيرة tightly-coupled. واكتشوفوا برضو إن جودة أو سوء التواصل بين الفرق بينعكس على جودة أو سوء التكامل بين أجزاء المشروع اللي هما شغالين عليها.

      فيه شركات عملاقة بقى استفادت من الفكرة دي لمصلحتها - زي أمازون و نتفليكس - وبيشتغلوا عن طريق تقسيم الشغل على فرق صغيرة مستقلة، وده إداهم مرونة عالية جدا وخلى وتيرة التطوير عندهم متسارعة جدا بالرغم من توسع أعمالهم المستمر.

      القانون ده بيشتغل بالعكس برضو، فزي ما تصميم البرنامج بيتأثر بالهيكل الإداري في المؤسسة، بيأثر فيها برضو، وده بيظهر قوي في الأنظمة القديمة، فمثلا لو كان البرنامج متقسم ل3 طبقات tiers: قاعدة بيانات، و إجراءات الأعمال Business Logic و واجهة المستخدم، وكل طبقة من دول كان عاملها ناس متخصصة في الحتة دي بس، يعني مثلا طبقة قاعدة البيانات مليانة stored procedures و وطبقة واجهة الاستخدام فيها شغل javascript عملاق و حاجات متقدمة جدا في التفاعل مع المستخدم، هاتلاقي إن بعد فترة المؤسسة مضطرة تستمر في تشغيل ناس متخصصة في كل طبقة من ال3 دول عشان البرنامج يفضل عايش.

      طيب إزاي بقى نخلي القانون ده يعمل لمصلحتنا مش ضدنا؟
      - لازمة القانون ده إنه لو تم توزيع الفريق اللي بدأ المشروع إلى فرق مستقلة، فبنية المشروع الأساسية Application Architecture ستعمل "ضد" المشروع ما لم يتم تغييرها.  فريديريك بروكس - اللي نشر الفكرة، زي ما قلنا فوق - قال إن تصميم أول نسخة من المشروع غالبا بيكون مش أفضل حاجة، و فيه احتمال كبير إنك تضطر تغير فيه حاجات كتير، ولذلك فمرونة المؤسسة في تقسيم وإعادة تقسيم الفرق مهم جدا في تصميم المشروع. بعبارة أخرى: تأكد أن بنية المشروع Application Architecture متوافقة دائما مع التقسيم الإداري للمؤسسة و إلا هاتلبس في الحيطة يا معلم!
      - الكود الواحد محتاج تواصل على مستوى التفاصيل الدقيقة fine-grained communication، لا تستطيع الفرق الموزعة القيام به، في الحالة دي أحسن حاجة تعملها إنك يا إما تجمع الفرق الموزعة في فريق واحد أو إنك تفصل الكود الواحد بحسب تقسيم الفرق، والتواصل في الحالة الثانية دي هايكون عند الضرورة فقط.
      - حاول تخلي تقسيم الفرق ييجي *بعد* وضع الarchitecture اللي أنت شايف إنه مناسب من الناحية الفنية للمشروع.
      - الفريق اللي بيشتغل على كود واحد خليه بقدر الإمكان قريب من بعضه، يعني لو في نفس المكتب يبقى مية مية، أقل من كده شوية لو في نفس الدور، وكل ما بيبعد أعضاء الفريق عن بعضهم بيبقى أوحش.

      آخر حاجة، اعتبروا الكلام ده مدخل للmicroservices و الdistributed systems ...أي خدعة :)
      مصدر الصورة و شوية مصادر استفدت منها في أول تعليق.

      ما تنسوش تنشروا المقالة لو حسيتوا إنها مفيدة :)
    media:
      image:
        height: 701
        src: https://scontent.xx.fbcdn.net/v/t31.0-8/s720x720/28060904_2031704887090676_7923696776569005910_o.jpg?oh=02b566015da6b00c466862d5e7b65533&oe=5B012381
        width: 720
    target:
      url: https://www.facebook.com/photo.php?fbid=2031704887090676&set=p.2031704887090676&type=3
    type: photo
    url: https://www.facebook.com/photo.php?fbid=2031704887090676&set=p.2031704887090676&type=3
