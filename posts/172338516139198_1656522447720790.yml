---
message: "Guys i need advice from cloud gurus.\none of my apps is a based on -kinda-
  micro service architecture.\nthe app back-end composed of 9 Php services, 2 nodejs
  services, 2 FTP servers, and 1 MySQL db. such services is consumed restfully by
  mobile apps and javascript frontends.\n\nnow my problem i have multiple vps to host
  php apps -depending on usage and scale-, and i keep node apps on heroku =basicaly
  cause i have no experince managing node host=, and database on google sql... \n\nall
  these instances make my life really hard. and google SQL is really really slow !!,
  also since all vps's are running Linux i find myself updating system manually every
  now & then. and i'm no linux expert by the way !, just have years of exp. bas sanay3i
  ya3ni msh fahem awi !:D-\n\ni need a better hosting ! \n\nall my php/nodejs servies
  are very simple scripts, they dont need a local-storage(they use remote ftp) nor
  database(they use single monolithic db hosted remotely)\nand my ftp servers are
  actuality a shared host !! since i don't care about performance on ftp i just use
  them for keeping users files and system backups, so i want to move everything into
  on one single place. and i want to move my mysql db out of google platform. i heard
  docker can help, but i'm not sure.\nwhat would you recommend :) ?"
from:
  name: Momen Al Zalabany
  id: '10160388991030144'
type: status
created_time: '2017-11-09T01:54:48+0000'
updated_time: '2017-11-11T19:30:00+0000'
permalink_url: https://www.facebook.com/groups/egyptian.geeks/permalink/1656522447720790/
id: '172338516139198_1656522447720790'
reactions:
  data:
  - id: '2004705666469226'
    name: Ahmed Essam
    type: LIKE
  - id: '2032504700100329'
    name: Mohammed Yassin
    type: LIKE
  paging:
    cursors:
      before: TVRBd01EQTNPRGswTXpZAd05ETXdPakUxTVRBME56TXhPVFU2TWpVME1EazJNVFl4TXc9PQZDZD
      after: TVRBd01EQXdNakkwTlRVNU56RXpPakUxTVRBek9UVXpNemM2TWpVME1EazJNVFl4TXc9PQZDZD
comments:
  data:
  - created_time: '2017-11-09T02:49:47+0000'
    from:
      name: Abdelrahman Hosny
      id: '10212827860786253'
    message: |-
      Would you make your problem definition more clear? For me, it sounds like one of the following:
      - You need better hosting -> the solution is to just find a better hosting that supports all your needs and move there
      - all these instances make your life really hard -> you would tackle the problem of the software architecture itself that you misused microservices; it is supposed to make your life easy and understandable, not hard
      - Google sql is really slow -> perhaps the problem is not with google. Usually sql connections originating from a different server/domain (+ not in the same data center) have latency to pass by the security layer of the db engine. So, you might not want to blame Google, but to review your architecture again
      - you want to move to one single place -> it's not about the place, but the architecture itslef and how those small services collaborate. It's completely fine (and advised) to move to one single place (same provider). I'd recommend to look into whatever is easier for you and your technical background. Don't over-engineer.
      - Docker will introduce more challenges to you at the current state of your architecture; I think.
    id: '1656688397704195'
  - created_time: '2017-11-09T03:10:25+0000'
    from:
      name: Mohammed Fox
      id: '1534405689947170'
    message: "My Recommendations will be based upon a good experience with linux in
      general and DevOps to some degree .\n1 - Use a cloud service like AWS/Alibaba
      Cloud ( i dont recommend google cloud or Azure ) \n2 - Define all your services
      in one AZ (Availability Zone ) search the term to get more information about
      the benefits of it .\n3 - regarding MySql Issue im going to assume its has very
      large data set or very high throughput, so one solution is debugging and finding
      the bottleneck in your application then scale upon on it\nfor example use auto
      scaling option to make the MySql instance gain more processing power upon high
      pressure (AWS auto scaling groups).\n4 - Regarding the  painful deploy/upgrade
      issue , use CI/CD solution to semi automate the process ( Jenkins , Bamboo or
      Cloud Formation, Elastic Beanstalk)\n5 - Regarding the environment issue , you're
      stuck with one of two solutions \nFirst One : Environmental Orchestrating Solutions
      Like Chef/Puppet\nSecond One : Using Containers using Docker/Rocket\n\nthis
      is a quick dirty like recommendation feel free to reach out on private messaging
      for further discussions or questions\nBest luck"
    id: '1656701037702931'
  - created_time: '2017-11-09T05:01:36+0000'
    from:
      name: Ahmad Hisham
      id: '10159889607765058'
    message: "Docker is a very good solution in your case, it needs some learning,
      but it is worth it. \nAlso use AWS, it has many services you can use and you
      can utilize its command line tools and APIs in scripting languages to automate
      many of your manual tasks."
    id: '1656759274363774'
  - created_time: '2017-11-09T05:39:07+0000'
    from:
      name: Mohamed Eltantawi
      id: '10160105091695314'
    message: Maybe I am old school and go against the wind but a good spec'ed dedicated
      server (or two) from providers like online net / hetzner / ovh / myloc, properly
      configured and optimized will leap around any entry level cloud solution and
      almost certainly cost less.
    id: '1656777384361963'
  - created_time: '2017-11-09T07:21:49+0000'
    from:
      name: Karim Tawfik
      id: '10159730660210062'
    message: |-
      It is a broad discussion, however here are my 2-cents, Managing your own dedicated servers on microservice environment is a like shooting your own foot, specially when you have 3 servers as you said, stand alone dedicated servers can be used with monolithic apps, as more or less it is one app, you can easily do a rolling updates and you done.

      But when it comes to microsercive, you need a lots of stuff like ci/cd ( Jenkins, circleci -donâ€™t recommend circleci), monitoring for your microservices ( grafaphana, Prometheus, or the basic cloud provider metrics), availability and scaling, managing kernel updates.... and other stuff.
    id: '1656837011022667'
  - created_time: '2017-11-09T10:00:00+0000'
    from:
      name: Mohammad Fouad
      id: '10155755444625845'
    message: |-
      Correct me if I am wrong, are you using DB remotely? I mean a Heroku app accesses a public DB instance on google?!
      Ofcourse it will be horribly slow. The DB MUST be in the same zone, inside the same hosting next to the app.
      DB should not even be publicly accessible.
    id: '1656916861014682'
  - created_time: '2017-11-09T10:03:19+0000'
    from:
      name: Mohammad Fouad
      id: '10155755444625845'
    message: Also, Google must be ripping you off on Bandwidth!, all the apps must
      be inside the same provider, in the same region. minimize internet traffic between
      them. The traffic between client and service is already slow enough, don't add
      more to it.
    id: '1656918311014537'
  - created_time: '2017-11-09T10:08:55+0000'
    from:
      name: Mohammad Fouad
      id: '10155755444625845'
    message: |-
      I know that many blogs and stuff advice to keep things separate without elaborating that they should be in the same zone, but If you need proof, just run "tracert DB_SERVER" from the node server.
      and watch the latency numbers. all this without doing any processing or running queries.
    id: '1656921311014237'
  paging:
    cursors:
      before: WTI5dGJXVnVkRjlqZAFhKemIzSTZANVFkxTmpZANE9ETTVOemN3TkRFNU5Ub3hOVEV3TVRrMU56ZAzQZD
      after: WTI5dGJXVnVkRjlqZAFhKemIzSTZANVFkxTmpreU1UTXhNVEF4TkRJek56b3hOVEV3TWpJeU1UTTEZD
