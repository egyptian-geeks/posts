---
message: |-
  Hello,
  Is nodejs suitable as a backend for a banking system (balance inquiry, make transaction, ...)?
  What about the security, performance (single-threaded), scalability?
from:
  name: Ahmad Salah
  id: '2461629930728686'
type: status
created_time: '2018-03-21T06:43:49+0000'
updated_time: '2018-03-24T22:49:31+0000'
permalink_url: https://www.facebook.com/groups/egyptian.geeks/permalink/1790457207660646/
id: '172338516139198_1790457207660646'
reactions:
  data:
  - id: '1189827847786642'
    name: Abdelrhman Elsaid
    type: LIKE
  - id: '10156165643313420'
    name: Tony Raoul Iscaros
    type: LIKE
  - id: '2101901136700019'
    name: Islam Mansour
    type: LIKE
  - id: '179696229429042'
    name: Mohamed Ezzat
    type: LIKE
  paging:
    cursors:
      before: TVRBd01EQXlOemd6TVRNME16WXdPakUxTWpFNE56ZAzNOekE2TWpVME1EazJNVFl4TXc9PQZDZD
      after: TVRBd01ESXhOalU1T1RjeE9EYzBPakUxTWpFMk1UVXlNVGs2TWpVME1EazJNVFl4TXc9PQZDZD
comments:
  data:
  - created_time: '2018-03-21T07:05:19+0000'
    from:
      name: Mahmoud Hussien
      id: '1818394378453420'
    message: f
    id: '1790532620986438'
  - created_time: '2018-03-21T09:23:45+0000'
    from:
      name: Mohammed El Sayed
      id: '10155880598025170'
    message: ممكن حضرتك بدل ما تسأل سؤال فى المطلق إنك تشرح الخطوات اللى مشيت فيها,
      والأراء المختلفه اللى وصلتلها. دا أفضل لحضرتك وللناس اللى فى الجروب كمان علشان
      نقدر نساعد بعض بشكل أفضل. :)
    id: '1790631214309912'
  - created_time: '2018-03-21T12:17:18+0000'
    from:
      name: Amr ELsaqqa
      id: '10156301546469701'
    message: "انا مش متخصص في node يعنى \nبس تقدر تعمل ب node اي حاجة، وموضوع السنجل
      ثريد بيتحل ب cluster و loadbalancer  ، تقدر تبنى architecture قوية ومنظمة الاول
      للسستم بتاعك مش لازم تلتزم بالشكل الجاهز بتاع الفريموركس  .. اللى في express
      مثلا وخلاص، \nلو استخدمت type script هتخلي الكود strongly typed اكتر، وتتغلب
      على مشاكل كتير في ال development lifecycle \n\nالاهم هنا هيكون الداتابيز معتقدش
      mongo و الـ document based عامة مناسبة لسستم بنك وحسابات، اشتغل مثلا ب postgres
      او mysql او اوراكل في حالة لو البروجكت يسمح بده .."
    id: '1790758810963819'
  - created_time: '2018-03-21T12:20:23+0000'
    from:
      name: Mourad Al Ashry
      id: '10160284573020019'
    message: Abdallah Gamal
    id: '1790761197630247'
  - created_time: '2018-03-21T17:00:41+0000'
    from:
      name: Tony Raoul Iscaros
      id: '10156165643313420'
    message: |-
      Node can do it but you should consider using something more "Enterprise" friendly.

      Node by design has a problem with dependency hell, a single dependency that will get any attack your system will be exploited.

      If you can avoid untrusted dependencies. use a good OOP language like typescript and structured database (MySQL , mariaDB...) Then you can use it.

      Node can run inside Apache so maybe if you need it for a service or two that would be better
    id: '1791005400939160'
  - created_time: '2018-03-22T14:45:21+0000'
    from:
      name: Mohamed Shaaban
      id: '10156259295924301'
    message: |-
      Node.js IMHO is not a good fit for heavy/long running CPU tasks (which I'd expect in a banking system? correct me if I'm wrong), because when you start a node process, you're starting a single process with a single thread in a single core, and because of the event-loop, one long running CPU task will block the others.

      One might say, well, you can use cluster module to start multiple processes in different cores, but the fact is, it's still single threaded.

      Load-balancer together with cluster module will help indeed to balance the load on your system, but again you'll need to do extra effort.

      Node.js is powerful mainly because of its powerful parallel I/O, which you can see in Netflix for instance
    id: '1791911724181861'
  - created_time: '2018-03-23T16:28:52+0000'
    from:
      name: Mohammad Fouad
      id: '10155755444625845'
    message: |-
      Background, I use NodeJs in my company heavily and rely on it for so many things, however my answer for your scenario is #CertainlyNot!
      Pros:
      1- Node is more event driven than other languages, so it will make development easy since most of the banking work is triggered by events (transactions, etc.)

      Cons:
      1- Banking is #math, and a language that is not math friendly is certainly a bad fit.
      2- Banking is #time, and a language that is not time or date friendly (read about dealing with time in JS) is not a good fit.
      3- Banking needs stability, and a language that is fast changing and growing won't be a good fit.
      4- Banking data is slow changing, schema is important, you MUST use a static language. Node is strong in dealing with Dynamic data and NoSQL, I "think" the community support for Node+RDBMS databases is horrible.
      even if it is good, I doubt it will be up to latest Node standards (assuming there is a standard)
    id: '1793038150735885'
  - created_time: '2018-03-23T17:41:44+0000'
    from:
      name: Usama Fayez
      id: '10155807421830280'
    message: What is the scope of your project? Are you designing everything end-to-end
      including connections and reading from the database, or are there web services
      that are available and you're going to use to retrieve the data and initiate
      the transactions?
    id: '1793105387395828'
  - created_time: '2018-03-24T01:34:48+0000'
    from:
      name: Mohamed Samy
      id: '10160396852830355'
    message: I don't get why you are considering using nodejs for any application
      at all? The only reason I see is that some people only know Javascript and are
      not comfortable in any other language. Other than that, if you seek a dynamic
      language, then Python, C#, Java, Ruby ... etc
    id: '1793436514029382'
  - created_time: '2018-03-24T22:49:27+0000'
    from:
      name: Mohamed Shaaban
      id: '10156259295924301'
    message: |-
      Just a side note:

      For such a big system, you don't have to choose one and only one language.

      With the help of current architectures (e.g. microservice) you could build the most critical part using the most secure, static-typed, fastest,  cheapest language (if there is any), and for the other parts pick whatever suits that part in terms of resources or whatever metric you have.
    id: '1794358217270545'
  paging:
    cursors:
      before: WTI5dGJXVnVkRjlqZAFhKemIzSTZANVGM1TURVek1qWXlNRGs0TmpRek9Eb3hOVEl4TmpFMU9USXcZD
      after: WTI5dGJXVnVkRjlqZAFhKemIzSTZANVGM1TkRNMU9ESXhOekkzTURVME5Ub3hOVEl4T1RNeE56WTQZD
