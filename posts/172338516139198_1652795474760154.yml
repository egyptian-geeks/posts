---
message: |-
  How can you secure API keys client-side?

  I am building a serverless platform with a combination of Microsoft Azure Cloud Functions and ReactJS front-end application. I need to secure access to those functions using keys. However I am not sure what is the most secure way to store those keys in the React application. Any ideas or suggestions ?

  Thanks.
from:
  name: Amr Yousef
  id: '10216129314284453'
type: status
created_time: '2017-11-04T22:20:01+0000'
updated_time: '2017-11-06T22:05:19+0000'
permalink_url: https://www.facebook.com/groups/egyptian.geeks/permalink/1652795474760154/
id: '172338516139198_1652795474760154'
comments:
  data:
  - created_time: '2017-11-05T01:14:00+0000'
    from:
      name: Tony Raoul Iscaros
      id: '10156165643313420'
    message: I don't have any experience with azure , but using keys for aws should
      be similar. never use them on the client side , there is an API for using the
      server for signing requests so keys are never exposed to the client side. (Again
      the API was for aws I have 0 knowledge of azure)
    id: '1652905984749103'
  - created_time: '2017-11-05T06:01:41+0000'
    from:
      name: Hesham Desouky
      id: '10215011048531592'
    message: Is this a web or mobile app?
    id: '1653113751394993'
  - created_time: '2017-11-05T08:50:49+0000'
    from:
      name: Khaled Attia
      id: '10210820336483862'
    message: Islam Gad Read & follow the comments on this post.
    id: '1653199038053131'
  - created_time: '2017-11-05T10:14:42+0000'
    from:
      name: Hazem Salem
      id: '10159894024455174'
    message: mate, use OAuth Client flow through an Identity Provider "Auth0 is a
      good one" and use an API gateway in the front for Validation and Coarse-grained
      Authorization if you want to.
    id: '1653243171382051'
  - created_time: '2017-11-05T13:26:33+0000'
    from:
      name: Momen Al Zalabany
      id: '10160388991030144'
    message: Guys recommending oauth, oauth token are not secure by nature.. Snd There
      is no way to secure em. Only few recommendations like keep life time short,
      never save a refresh token client side etc.. But any how if u gona use oauth
      u already know that tokens are exposed so u transfer them across https, and
      hope no xss can steal em :)..
    id: '1653368038036231'
  - created_time: '2017-11-05T16:58:26+0000'
    from:
      name: Khaled Ramadan
      id: '10157199016384478'
    message: |-
      Read about IdentityServer4 and choose the best flow for your application.
      http://docs.identityserver.io/en/release/
    id: '1653532451353123'
  - created_time: '2017-11-06T21:46:19+0000'
    from:
      name: Mohammad Fouad
      id: '10155755444625845'
    message: |-
      Usually User based OAuth and Temp Tokens are better than App keys. So you send a token that says that the user "Ahmed" is the one starting the request. If Ahmed has permissions then cool, else block him.

      This is good for user based API. If you API is not user related, then you can use server whitelisting using CORS. which will case chrome to block an API call if it is not made from inside a page loaded by your site.
      This way you will protect against cross site scripting and such.
    id: '1654667361239632'
  - created_time: '2017-11-06T21:56:11+0000'
    from:
      name: Mohammad Fouad
      id: '10155755444625845'
    message: |-
      Also "Secure" is a very generic term, which type of attacks are you worried about? Overloading the site with requests? someone seeing data he is not supposed to? These are different threats and are handled differently.
      There 10 major vulnerabilities that you should make sure to close
      https://github.com/OWASP/Top10/blob/master/2017/OWASP%20Top%2010%202017%20RC2%20Final.pdf
    id: '1654672267905808'
  - created_time: '2017-11-06T21:57:53+0000'
    from:
      name: Amr Yousef
      id: '10216129314284453'
    message: Thanks. I will look into this document. By secure, I meant reducing the
      visibility of the temp tokens thus limiting access to my API and it's data.
    id: '1654673211239047'
  - created_time: '2017-11-06T22:04:06+0000'
    from:
      name: Mohammad Fouad
      id: '10155755444625845'
    message: |-
      These are good examples of different types of attacks, you can handle the feasible/possible attacks first. the rest can be a lower priority.

      https://www.owasp.org/index.php/Category:Attack
    id: '1654677001238668'
  - created_time: '2017-11-06T22:05:17+0000'
    from:
      name: Amr Yousef
      id: '10216129314284453'
    message: Awesome. Thanks so much
    id: '1654677841238584'
  paging:
    cursors:
      before: WTI5dGJXVnVkRjlqZAFhKemIzSTZANVFkxTWprd05UazRORGMwT1RFd016b3hOVEE1T0RRME5EUXcZD
      after: WTI5dGJXVnVkRjlqZAFhKemIzSTZANVFkxTkRZAM056ZAzBNVEl6T0RVNE5Eb3hOVEV3TURBMU9URTMZD
