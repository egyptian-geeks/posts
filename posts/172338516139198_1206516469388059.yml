---
message: |-
  السلام عليكم

  من فضلكم يا شباب ايه فايدة انى لما اعمل مشروع MVC مثلا - اعمل كذا Multi Tire مثلا
  DAL
  BLL
  Presentation layer

  هل ده حيفرق فى اداء المشروع - هل حيكون اسرع ؟ هل ...... ؟
from:
  name: Ahmed Amin
  id: '1962172197389574'
type: status
created_time: '2016-08-17T09:44:44+0000'
updated_time: '2016-08-18T13:33:35+0000'
permalink_url: https://www.facebook.com/groups/egyptian.geeks/permalink/1206516469388059/
shares:
  count: 2
id: '172338516139198_1206516469388059'
reactions:
  data:
  - id: '10155274158521989'
    name: Mohammad Sharkawy
    type: LIKE
  - id: '10155277571022606'
    name: Heba El Deeb
    type: LIKE
  - id: '931399460358043'
    name: Mohammad Ali
    type: LIKE
  - id: '1061734923967862'
    name: Amira Mohamed
    type: LIKE
  - id: '1665988986754750'
    name: Osama Nour
    type: LIKE
  paging:
    cursors:
      before: TlRjd05UQXhPVGc0T2pFME56RTJNRGcwTVRnNk1qVTBNRGsyTVRZAeE13PT0ZD
      after: TVRBd01EQXdNekE1T1RRM01EZA3pPakUwTnpFME5EZA3pNVE02TWpVME1EazJNVFl4TXc9PQZDZD
comments:
  data:
  - created_time: '2016-08-17T09:47:56+0000'
    from:
      name: Bassam Abd Elhamid
      id: '1955441501387657'
    message: عشان تركز على كل جزء على حدى, كمان لما تيجى تعدل تعدل فى جزء واحد, انت
      حتى ممكن تستبدلو بالكامل بدون التاثير على باقى للايرز -نظرياً- .
    id: '1206520359387670'
  - created_time: '2016-08-17T10:02:39+0000'
    from:
      name: Kareem Kashwaa
      id: '10155729844185546'
    message: Google "loose coupling"
    id: '1206539396052433'
  - created_time: '2016-08-17T10:04:45+0000'
    from:
      name: Muhammad El-Hennawy
      id: '10213118809797201'
    message: اعملوه Spaghetti احسن !!
    id: '1206540939385612'
  - created_time: '2016-08-17T10:11:16+0000'
    from:
      name: Ahmed Mozaly
      id: '10155321930231313'
    message: |-
      إجابة على سؤالك المباشر "هل ده حيفرق فى اداء المشروع - هل حيكون اسرع ؟"
      لا
      مش ده اللي هيفرق في سرعة المشروع ولا حاجة
      تقسيم الكود لطبقات ومكونات ليه اهداف كتيرة .. ابسطها انك تجزء المشكلة الكبيرة لمشاكل اصغر وكل مشكلة صغيرة تكون معزولة عن غيرها
      فلو حد غيرك دخل على الكود بعدك، هيبقى سهل عليه يمسك حتة واحدة يعدل فيها من غير ما يبوظ اي حاجة تانية
    id: '1206543126052060'
  - created_time: '2016-08-17T10:11:46+0000'
    from:
      name: Ahmed Mozaly
      id: '10155321930231313'
    message: |-
      ممكن تبص برضة على اللينك ديه
      https://en.wikipedia.org/wiki/SOLID_(object-oriented_design)
    id: '1206543339385372'
  - created_time: '2016-08-17T10:12:06+0000'
    from:
      name: Mustafa Shaban
      id: '1620710828023369'
    message: "الموضوع كأداء مارح يفرق معك (طبعا على افتراض انو عملك بالطريقة التانية
      يكون سليم) \nولكن في كتير ايجابيات انو تعمل مشروعك MVC\nاهم الايجابيات انو واجهة
      المستخدم او ال Presentation Tire رح تكون منفصلة عن الطبقتين التانيات .. وبالتالي
      بتقدر تصمم واجهات مشروعك على اي بيئة سواء Mobile  او Web او Desktop Application\nالايجابية
      التانية انو يكون الكود سهل التعديل بحيث اذا اضطريت تعدل اي شي بالمستقبل يكون
      الموضوع سهل\nايجابية اخرى انو يكون سهل الفهم في حال حدى غيرك راد يعدل او يقرأ
      الكود الخاص فيك"
    id: '1206543402718699'
  - created_time: '2016-08-17T18:14:57+0000'
    from:
      name: سامح دعبس
      id: '2022490591345439'
    message: |-
      و عليكم السلام و رحمة الله و بركاته
      بص يا حبيب, إجابة سؤالك تطول, بس هاحاول أختصر بقدر المستطاع
      * خلينا الأول نصحح معلومة في السؤال: فيه فرق بين الtier  و الlayer. الاتنين طبقات, بس لو الطبقات بيشتغلوا على نفس الكمبيوتر يبقى اسمهم layers, لو انفصلوا يبقى اسمهم tiers. بعبارة أخرى, الlayers هي logical separation أما ال tiers فهي physical separation.
      * هل الطبقات دي هاتأثر على طريقة أداء المشروع؟
      - هاتبطأه (و لو قليلا في حالة الlayers  و كثيرا في حالة الtiers)
      - هاتتخليه أصعب في الفهم و الdebugging
      - هاتكبر المشروع
      - فكرة الreusability  للlayers دي انساها, مش هاتحصل!
      * أمال ليه وجع القلب ده؟
      --- يتبع - إن شاء الله -
    id: '1206957496010623'
  - created_time: '2016-08-17T18:24:32+0000'
    from:
      name: سامح دعبس
      id: '2022490591345439'
    message: "* ليه بقسم المشروع لطبقات؟ \n- فيه نظرية عامة في هندسة البرمجيات بتقول:
      إن أي مشكلة في تصميم البرامج ممكن أحلها بإضافة طبقة غير مباشرة - و الاستثناء
      الوحيد هو مشكلة كثرة الطبقات غير المباشرة -\nWe can solve any problem by introducing
      an extra level of indirection....except for the problem of too many levels of
      indirection\n\nممكن تقرأ المزيد عن النظرية دي هنا\nhttps://en.wikipedia.org/wiki/Fundamental_theorem_of_software_engineering\nيعني
      إيه الكلام ده؟\nيعني أنا عندي فورمة عليها شوية كونترولز, و عندي قاعدة بيانات,
      ليه ما بندهش لقاعدة البيانات على طول و أريح دماغي؟\nعشان أنا عندي مشكلة (أو
      عدة مشاكل) عاوز أحلها, و بتطبيق النظرية السابقة, رحت عامل طبقة حطيت فيها شغل
      الداتابيز, و طبقة حطيت فيها البزنس بتاعي, و خليت الطبقة اللي فيها الUI بسيطة
      لا بتهش و لا بتنش!\nطب إيه هي المشاكل اللي عاوز أحلها دي؟\n-- يتبع - إن شاء
      الله -"
    id: '1206962279343478'
  - created_time: '2016-08-17T18:34:23+0000'
    from:
      name: سامح دعبس
      id: '2022490591345439'
    message: |-
      تخيل الآتي:
      إني لو جبت الكود بتاع البزنس + الكود بتاع الداتبيز + الكود بتاع الui و حطيتهم في حتة واحدة, فكر معايا إيه اللي هايحصل في السيناريوهات دي:
      1- كنا شغالين ال UI بasp.net web forms بس مايكروسوفت عملت حاجة جديدة اسمها asp.net mvc بس لما جيت أطبقها ما عرفتش عشان الكود ملخفن!
      2- البرنامج كان صغير, و كنا شغالبن أكسس, بس لما كبر البرنامج أكسس ما استحملتش, فقلنا لازم نستخدم sql server بس ما عرفناش عشان الكود بتاع الداتابيز معتمد على أكسس, و ملخفن جوة الكود بتاع الui و محتاج تعديلات في حتت كتيرة!
      3- البرنامج كان شغال desktop بس برامج الdesktop بقت ميتة, و كل الناس متجهة نحو الويب و الموبايل, و أنا كاتب كود بقالي سنين كتيرة و حرام أرميه, و أبدأه من أول و جديد, و مش عارف أسلكه من الكود الملخفن!
      .. الأمثلة من دي كتيرة, الشاهد: إن فكرة تقسيم البرنامج لطبقات فوق بعض بتديني ميزة تسهيل استبدال أي طبقة (نوعا ما) , و ده اللي بنسميه design for replacement not reusability!
      طب إزاي حصلت على الميزة دي؟
      بإني خليت كل طبقة تعمل حاجة واحدة بس, و بالتالي بقى فيه سبب واحد للعب في الطبقة دي.
      مثلا: طبقة الpresentation بقت مش هالعب فيها إلا لما عاوز أعدل حاجة في طريقة العرض أو استبدلها كليا, و ده من غير ما قاعدة البيانات تتأثر. و نفس الكلام بينطبق على الطبيقات التانية.
      و ده اللي بنسميه separation of concerns و فيه رواية أخرى single responsibility principle
      ----
      -- يتبع - إن شاء الله -
    id: '1206968222676217'
  - created_time: '2016-08-17T18:42:40+0000'
    from:
      name: سامح دعبس
      id: '2022490591345439'
    message: |-
      رفقا يا حبيب, لو أنت مش فاهم كلامي اسأل, و لا تتهمني بعدم الفهم.
      لو لقيت إني بقول حاجة غلط صلح لي أكن لك من الشاكرين :*
    id: '1206972019342504'
  - created_time: '2016-08-17T18:44:40+0000'
    from:
      name: سامح دعبس
      id: '2022490591345439'
    message: "فيه فرق بين الresuability بين الreplacement \nالأولى تعني *إعادة الاستخدام*
      يعني عندي layer هاستخدمها ف حتة تانية\nأما الثانية فتعني *الاستبدال*, يعني عندي
      layer هارميها و أجيب واحدة بدالها\n---\nلسة شايف إنه غلط :)"
    id: '1206973146009058'
  - created_time: '2016-08-17T18:48:05+0000'
    from:
      name: سامح دعبس
      id: '2022490591345439'
    message: |-
      أما إنها هاتصعب الdebugging فده لا شك فيه, تخيل إنت عمال تنط في الlayers عشان توصل للbug أسهل و لا لو هي ف نفس المكان معاك أسهل؟
      ملاحظة تانية: لم أنقل من شيء, الكلام اللي أنا كاتبه من دماغي, و جبت ما يشهد عليه.
      تفضل, بين الغلط من غير "مغالطات" يعني قول س غلط عشان 1 - 2 - 3  و ما تقولش بتفلسف و أو غلط و خلاص :)
    id: '1206975439342162'
  - created_time: '2016-08-17T18:57:52+0000'
    from:
      name: سامح دعبس
      id: '2022490591345439'
    message: Bro, the *thing* that is named *logging* is a concern for certain layer
      not for all layers. By your last words you let me know that you are too far
      from what I am talking about, thanks for your time :*
    id: '1206992299340476'
  - created_time: '2016-08-17T19:08:13+0000'
    from:
      name: سامح دعبس
      id: '2022490591345439'
    message: |-
      مشكلة كمان...
      دلوقتي أنا حاطط كل الطبقات بتاعتي على كمبيوتر واحد, بس أنا خايف إن حد يقدر يhack الكمبيوتر ده و يحصل على البيانات اللي متسجلة في قاعدة البيانات, إيه الحل؟
      Add layers of indirection!
      بس الطبقات اللي هاضيفها هنا هاتكون في الحقيقة tiers مش layers بحيث لو أي tier فيهم اتضربت compromised هايكون لسه عندي خطوط دفاع تانية (الtiers  اللي ورا)!
      و بمجرد ما أقسم البرنامج بتاعي لtiers هاتتفتح لي آفاق تانية مثيرة جدا
      --
      يتبع - إن شاء الله -
    id: '1206999222673117'
  - created_time: '2016-08-17T19:43:29+0000'
    from:
      name: سامح دعبس
      id: '2022490591345439'
    message: |-
      أول حاجة هاتحصل لما أقسم البرنامج على أكتر من كمبيوتر tiers إن البرنامج هايبطأ شوية!
      أيوة... عشان فيه وقت هايستهلك في إن الدااتا تتنقل من كمبيوتر للتاني عبر الشبكة.
      لو الكمبيوترين دول بعاد عن بعض, و عملية نقل البيانات هاتتم عبر الإنترنت فالدنيا هاتكون أبطأ مما لو كانوا على شبكة داخلية.
      بس عشان أتغلب على مشكلات البطء دي محتاج أظبط حتت كتير في البرنامج, يعني مثلا أعتمد كتير على client = javascript و الajax calls و في السيرفر أعتمد كتير على الasync calls و هاحتاج اعمل optimization للdatabase queries و أعمل caching  للبيانات...إلخ و في الآخر الدنيا هاتظبط بصورة كبيرة.
      بالرغم من إن سرعة البرنامج قلت (نوعا ما) إلا إني لما عملت tiers هاقدر دلوقتي أحسن الscalability بتاعت البرنامج, وده هايحسن السرعة جدا!
      طب إزاي؟
      -- يتبع - إن شاء الله -
    id: '1207024086003964'
  - created_time: '2016-08-17T19:57:40+0000'
    from:
      name: سامح دعبس
      id: '2022490591345439'
    message: |-
      الscalability قصة طويلة مش ده وقتها, بس خلينا نقول إن معناها قد إيه البرنامج بتاعي هايستحمل زيادة عدد المستخدمين؟
      في حالة الكمبيوتر الواحد one tier قدرة البرنامج مرتبط بقدرة الكمبيوتر اللي هو شغال عليه. البرنامج هايفضل شغال معايا كويس و زي الفل لغاية لما عدد المستخدمين يوصل لحد معين بعده البرنامج سرعته هاتقل بصورة دراماتيكية (حلوة دراماتيكية دي :)
      و الحل إما تزويد إمكانات الكمبيوتر أو تزويد الكمبيوترات.
      فيه كلام هنا كتير web farms - web gardens ...إلخ, بس اختصارا, توزيع البرنامج هايسمح لي إني أعمل optimization  لأجزاء معينة في البرنامج تحسن الscalability بتاعته.

      طب السرعة هاتزيد و لا هاتقل, آخر كلام؟ :)
      لو البرنامج بتاعك صغير و عدد المستخدمين صغير, هاتحس إنها بطيئة.
      لو البرنامج بتاعك كبر, و عدد المستخدمين زاد هاتحس إنها أسرع.
      ---
      و ده يقودنا إن للهدف الرئيسي من كل الحوارات دي: المرونة!
      لما بقسم الدنيا لأجزاء أو طبقات بيبقى عندي المرونة اللي تخيني أعمل optimizations على كل جزء على حدة.
      ----
      و كما يظهر من كل الهري ده, إني زودت الcomplexity  بتاعت البرنامج بس في المقابل حصلت على مرونة: مرونة إني أستبدل بأجزاء تعبانة في البرنامج  أجزاء كويسة , مرونة إني أظبط و أجزاء في البرنامج من غير ما أأثر على أجزاء تانية..إلخ.
      ---
      آخر كلام عشان زهقت من كتر الكتابة: الفائدة من الحوارات دي بتبان لما البرنامج يكبر, لكن طول ما هو صغير فهاتفضل تحس إنه صعبة و رخمة و مالهاش فايدة كبيرة!
      و بالتوفيق :)
    id: '1207030589336647'
  - created_time: '2016-08-17T20:05:15+0000'
    from:
      name: سامح دعبس
      id: '2022490591345439'
    message: |-
      نسيت أبين كل توابع التقسيم ده اللي قلتها في أول تعليق. أنا قلت:
       هل الطبقات دي هاتأثر على طريقة أداء المشروع؟
      - هاتبطأه (و لو قليلا في حالة الlayers و كثيرا في حالة الtiers) --> اتكلمنا عنها خلاص
      - هاتتخليه أصعب في الفهم و الdebugging --> اتكلمنا عنها خلاص, بس عاوز أزود نقطة عشان م أحمد عوض ذكر نقطة صعبة شوية, الlogging غير الdebugging كلاهما وسيلة لاكتشاف الأخطاء و ليسوا شيئا واحدا.
      - هاتكبر المشروع --> أكيد: هاتزود tier يعني هاتعمل project منفصل لكل tier و هاتحتاج تزود web services...إلخ, و ده طبعا هايصعب الدنيا أكتر.
      - فكرة الreusability للlayers دي انساها, مش هاتحصل!
      اسأل أي واحد عمل كام مشروع وييب, كام مرة أخد Layer ك dll و أعاد استخدامها في مشروع تاني؟ عمر ده ما حصل معايا! أقصى ما فعلته إني أخدت شوية كود copy/paste و استخدمتهم في مشروع تاني. و ده ما اسمهوش reusability ده اسمه code duplication و ده ربما يكون مصدر كل الشرور في البرمجة - كما قال روبرت مارتن!
      لكن كام مرة احتجت إني استبدل layer فيها مشاكل بlayer تانية اسبب أو لآخر؟ ده حصل معايا كتيييير. عشان كده بقول لك design for replacement not reusability و ده بيفرق على فكرة في طريقة التصميم نفسها, بس ده مش مجاله دلوقتي.
      ... بالتوفيق :)
    id: '1207036362669403'
  - created_time: '2016-08-18T05:09:37+0000'
    from:
      name: Ahmed Badawy
      id: '1596110217148252'
    message: لا مش هيكون اسرع. بس هيكون اكتر تنظيما و اقل جهدا فى العمل على المدى
      الطويل....
    id: '1207330572639982'
  - created_time: '2016-08-18T05:49:38+0000'
    from:
      name: Sameh Amin
      id: '10154948046651582'
    message: بارك الله فيك يا Sameh Serag
    id: '1207344415971931'
  - created_time: '2016-08-18T05:52:09+0000'
    from:
      name: Emad Shaaban
      id: '1483867968332898'
    message: "انا متفق مع Sameh Serag في حتة ان الresuability دي غالبا مش بتحصل ..
      الا لو حتة كود generic اوي و في اغلب الاحوال الحتت ال generic اوي دي مبنكتبهاش
      اصلا و بنستخدم library جاهزة و tested و زي الفل\nالا لو انت اصلا عايز تعمل library
      ليك و لغيرك يستخدموها ده موضوع تاني\n\nو متفق معاه كمان في ان ال replacement
      عادة اهم من ال reusablity و عادة هو ده اللي بنكون محتاجينه فعلا\n\nبس اختلف
      في جزئية ال debugging .. لان انت لو مقسم الكود بتاعك مظبوط ده حيسهل ال testing
      جدا و بالتبعية ال debugging غالبا هيكون اسهل لانك وقت ال bug غالبا مش هتحتاج
      تبص غير عالجزء اللي ال test بتاعه احمر في وشك  \nو انا بقول غالبا مش دايما لاني
      اكيد معيشتش كل الحالات اللي في الدنيا .. و ممكن تكون انت مريت بتجربة بتثبت عكس
      اللي انا بقوله و لو كده احكيلنا\n\nبالنسبة لكلام Ahmed Awaad .. يا ريت متاخدش
      كلامي بشكل هجومي .. عشان انا كنت بعمل زيك كده من فترة و بعتبر المعلومات اللي
      انا عارفها صح بشكل مطلق \"لمجرد اني قريتها في كتاب مشهور مثلا\" \nبس مع الوقت
      اكتشفت ان اللي بعمله ده غلط .. ﻻن ببساطة ممكن يكون في كتاب مشهور تاني بيقول
      عكس اللي انا قريته في الكتاب الاولاني\n\nباختصار مفيش حاجة صح بشكل مطلق في المجال
      بتاعنا ده .. و نصيحة ليك خدلك لفة في الموقع ده مثلا .. هتشوف جواه اراء كتير
      لناس تقيلة اوي و معروفة اوي بيقولو كلام عكس المتعارف عليه و محدش قالهم انتو
      ناقلين كلام مش فاهمينه \nhttp://harmful.cat-v.org/"
    id: '1207345602638479'
  - created_time: '2016-08-18T13:33:34+0000'
    from:
      name: سامح دعبس
      id: '2022490591345439'
    message: "لازم أختم التعليق على السؤال ده إن إضافة الcomplexity دي على المشروع
      لازم تكون مبررة, يعني المشروع طول ما هو صغير (يتعمل في  أيام) مفيش داعي إني
      أعمل الفصلة في الكود, أي عجن في الcontroller هايكون كويس\nلو المشروع كبر شوية
      (يتعمل في أسابيع) هنا الlayers هاتكون مناسبة \nلو كبر أكتر (يتعمل في شهور) هنا
      الtiers هاتكون مناسبة أكتر\n... و هكذا (فيه حوارات تانية بس كفاية كده لحد دلوقتي
      :)"
    id: '1207563265950046'
  paging:
    cursors:
      before: WTI5dGJXVnVkRjlqZAFhKemIzSTZANVEl3TmpVeU1ETTFPVE00TnpZAM01Eb3hORGN4TkRJM01qYzIZD
      after: WTI5dGJXVnVkRjlqZAFhKemIzSTZANVEl3TnpVMk16STJOVGsxTURBME5qb3hORGN4TlRJM01qRTAZD
