---
message: |-
  Been looking for a simple validation scheme for URLs in PHP, using filter_var reports URLs with Arabic characters as "invalid"

  I came across this article which studies several RegEx's and compares them against each other in validating all kinds of urls

  I think this is the most useful article about the matter I have seen so far
link: https://mathiasbynens.be/demo/url-regex
from:
  name: Mostafa Muhammad
  id: '10155787111376210'
type: link
created_time: '2014-10-16T07:13:27+0000'
updated_time: '2014-10-17T08:15:47+0000'
name: In search of the perfect URL validation regex
permalink_url: https://www.facebook.com/groups/egyptian.geeks/permalink/831296000243443/
id: '172338516139198_831296000243443'
reactions:
  data:
  - id: '10155855157936047'
    name: Mosab Ibrahim
    type: LIKE
  - id: '1955441501387657'
    name: Bassam Abd Elhamid
    type: LIKE
  - id: '10214811000325401'
    name: Ashraf Saied
    type: LIKE
  - id: '10156054543304084'
    name: Ahmed ElSawaf
    type: LIKE
  paging:
    cursors:
      before: TnpVMU1ESTJNRFEyT2pFME1UTTFOems1TXpJNk1qVTBNRGsyTVRZAeE13PT0ZD
      after: TmpZAd05qQTVNRGd6T2pFME1UTTBOVEUyTWpjNk1qVTBNRGsyTVRZAeE13PT0ZD
comments:
  data:
  - created_time: '2014-10-16T07:14:40+0000'
    from:
      name: Mostafa Muhammad
      id: '10155787111376210'
    message: He doesn't comment on the performance though...
    id: '831296283576748'
  - created_time: '2014-10-17T06:40:50+0000'
    from:
      name: Bassam Abd Elhamid
      id: '1955441501387657'
    message: طيب ايه رايكو لو عملنا ريكوست للعنوان ده لو رجع اوك يبقى تمام غير كده
      يبقى نوت فيلد
    id: '831765153529861'
  - created_time: '2014-10-17T08:15:47+0000'
    from:
      name: Mohamed Elsherif
      id: '10160105091405314'
    message: |-
      Requesting the URL kind off defeats the purpose of validation, you want to avoid requesting a URL that is obviously wrong or malformed,  for so many reasons like the overhead of making a web request, or security of requesting random URL's.
      With RegEx you have to be careful too, especially when validating user inputs because if you used a very fancy RegEx it can take up to exponential time O(2^n) to validate the input, which can expose your service\website to DDOS attacks
    id: '831789106860799'
  paging:
    cursors:
      before: WTI5dGJXVnVkRjlqZAFhKemIzSTZAPRE14TWprMk1qZA3pOVGMyTnpRNE9qRTBNVE0wTkRNMk9EQT0ZD
      after: WTI5dGJXVnVkRjlqZAFhKemIzSTZAPRE14TnpnNU1UQTJPRFl3TnprNU9qRTBNVE0xTXpNM05EYz0ZD
attachments:
  data:
  - description: To clarify, I’m looking for a decent regular expression to validate
      URLs that were entered as user input with. I have no interest in parsing a list
      of URLs from a given string of text (even though some of the regexes on this
      page are capable of doing that). I also don’t want to allow every possible…
    target:
      url: https://l.facebook.com/l.php?u=https%3A%2F%2Fmathiasbynens.be%2Fdemo%2Furl-regex&h=ATO-3vkWsG0MrmwqsE3aV_PDKmVfydAOj3KF3Z_Ds-ImmUUkabI1a9IdhDoYGx478QzzbvryhPkJ2wqamEPwo1CbjxjKJSMmrY-ejKkuQZM9lwZTcGztpjDfWLxR_EyjNmla2UWFLUJgik_o&s=1
    title: In search of the perfect URL validation regex
    type: share
    url: https://l.facebook.com/l.php?u=https%3A%2F%2Fmathiasbynens.be%2Fdemo%2Furl-regex&h=ATO-3vkWsG0MrmwqsE3aV_PDKmVfydAOj3KF3Z_Ds-ImmUUkabI1a9IdhDoYGx478QzzbvryhPkJ2wqamEPwo1CbjxjKJSMmrY-ejKkuQZM9lwZTcGztpjDfWLxR_EyjNmla2UWFLUJgik_o&s=1
