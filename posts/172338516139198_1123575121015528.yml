---
message: Who can give me a practical example showing the difference between  \r and
  \n ;) ?
from:
  name: Amr ELsaqqa
  id: '10156301546469701'
type: status
created_time: '2016-04-13T17:27:27+0000'
updated_time: '2016-04-13T19:30:32+0000'
permalink_url: https://www.facebook.com/groups/egyptian.geeks/permalink/1123575121015528/
id: '172338516139198_1123575121015528'
reactions:
  data:
  - id: '10210785782062877'
    name: Ibrahim Mohamed
    type: LIKE
  - id: '10159994844535341'
    name: Abdelrhman Safwat
    type: LIKE
  - id: '10215112672708168'
    name: Abdelrhman H. Yassen
    type: LIKE
  - id: '10157144460289251'
    name: Mohamed Sayed
    type: LIKE
  paging:
    cursors:
      before: TVRNd01ESXhNamsyTkRveE5EWXdOVGN5TURjME9qSTFOREE1TmpFMk1UTT0ZD
      after: TlRNek5UWTBNalV3T2pFME5qQTFOamszT0RFNk1qVTBNRGsyTVRZAeE13PT0ZD
comments:
  data:
  - created_time: '2016-04-13T17:33:01+0000'
    from:
      name: Nasser Mohammed Ali
      id: '10213493310141587'
    message: Google
    id: '1123578374348536'
  - created_time: '2016-04-13T17:33:38+0000'
    from:
      name: Amr ELsaqqa
      id: '10156301546469701'
    message: انا عرفت حاجة دلوقتى بالصدفة، وعاوز الناس تعرفها معايا ، بس قلت اسأل
      كدة الاول ;)
    id: '1123579744348399'
  - created_time: '2016-04-13T17:43:18+0000'
    from:
      name: Amr ELsaqqa
      id: '10156301546469701'
    message: "تخيل مثلا انت بتعمل task معينة من خلال سكربت  وبتسجل الـ progress بتاعها
      في log file \n\nاللى هو كل شوية تطبع سطر جديد فيه الـ progress مثلا \n\n00%
      =\n01% =\n10% ===\n20% =======\n30% ==========\n60%  ====================\n90%
      \ ==============================\n100% =================================\n\nلو
      بين كل سطر والتانى \n\\n \nاو \n\\r\\n \nهتيجي تعرض الفايل ع الترمنال هيطلع
      بنفس الشكل اللى فوق \nاما لو \n\\r\nفكل ما تيجي تعرض ع الترمنال في اي لحظة اثناء
      او بعد ما الجوب تخلص هيعرض اخر سطر بس \n\nلان \\r عبارة عن كنترول كاركتر بيجيب
      اول السطر من غير ما ينقل على سطر جديد \nفالترمنال يفضل على نفس السطر وكل سطر
      يـ overwrite أللى قبله لحد ما يوصل لاخر سطر وانت بتعرض ع الشاشة ، وده مثلا في
      cat او vim"
    id: '1123585177681189'
  - created_time: '2016-04-13T17:52:14+0000'
    from:
      name: Ahmad Hisham
      id: '10159889607765058'
    message: |-
      The same between Carriage Return and Line Feed and between ASCII 13 and ASCII 10
      Wiki it.
    id: '1123589114347462'
  - created_time: '2016-04-13T17:53:07+0000'
    from:
      name: Amr ELsaqqa
      id: '10156301546469701'
    message: مانا كان سؤالى ايه الفرق برضو بين كل دول عمليا ;)
    id: '1123589511014089'
  - created_time: '2016-04-13T18:05:48+0000'
    from:
      name: Mostafa Muhammad
      id: '10155787111376210'
    message: أعتقد الموضوع ليه أصول تاريخية من أيام الآلة الكاتبة ، الـ Carriage return
      بترجع الطابعة لأول السطر والـ Line feed بتنزلها سطر ، الاستخدام اتغير دلوقتي
      بس الأثار فضلت معانا
    id: '1123594347680272'
  - created_time: '2016-04-13T18:06:51+0000'
    from:
      name: Amr ELsaqqa
      id: '10156301546469701'
    message: "حلو اوى اوى ، انا فعلا كنت بقول زي كدة بالظبط وهى دى فعلا الحقيقة\nبس
      كنت فاكر ان الموضوع ان الويندوز بيحتاج \\r\\n عشان يميز سطر جديد \nواليونكس
      واشباهه بيكتفى بـ \\n \nوعشان الاسباب التاريخية وخلاص مفيش سبب تانى وفرق تانى
      حاليا \nماكنتش اعرف ان ممكن عمليا استخدم \\r بس استخدام مفيد"
    id: '1123594951013545'
  - created_time: '2016-04-13T18:17:59+0000'
    from:
      name: Ahmad Fatoum
      id: '1356410114464931'
    message: |-
      \r is carriage return, \n is line feed.
      a line break needs both, a carriage return to move the teletype's writing head to the start of the line, a line feed to scroll the paper roll.
      In Unix, the terminal driver has been traditionally responsible to transform LF to a CRLF sequence that's output to the teletype.
      Other systems, like the original Mac OS, used CR for the same purpose (Well not exactly, Mac OS had no terminal, but it used \r in files).
      Yet other systems, like DOS (and now Windows) didn't implement CRLF translation at all in the terminal driver and user level application output CRLF directly.

      Another thing is, that the C standard specifies that \n is _the_ way to output a line break. Therefore all C stdio functions have to do translation of \n to whatever the underlying implementation's concept of a new line is and vice versa on output/input. That's why the standard differentiates between text and binary IO. text IO involves new line translation at runtime level. binary IO doesn't (but as said above, might involve translation at lower levels not covered by the ISO standard).

      In short, use \n to get a new line. Let the implementation do the translation work.
      Additionally, Unix terminals use \r to get to the start of the current line if you want to e.g. animate a progress bar on the same line.

      Also note that some editors, behave differently, e.g. if you want to replace a tab with a newline in vim, you need to do s/\t/\r/. But if you want to replace new line with a tab you do s/\n/\t/. Go figure..
    id: '1123607684345605'
  paging:
    cursors:
      before: WTI5dGJXVnVkRjlqZAFhKemIzSTZANVEV5TXpVM09ETTNORE0wT0RVek5qb3hORFl3TlRZANE56ZA3gZD
      after: WTI5dGJXVnVkRjlqZAFhKemIzSTZANVEV5TXpZAd056WTRORE0wTlRZAd05Ub3hORFl3TlRjeE5EYzUZD
