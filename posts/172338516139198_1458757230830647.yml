---
message: |-
  What is your take on development vs every day computing environments? I mean, do you separate them (using virtual machines, dual booting, remote access, other ways?) or you just install everything you need in the same instance (Web servers,  IDEs, games, database servers, office, etc.).

  I am asking because currently I have a beefy Windows PC that I use for personal stuff (gaming, browsing, etc), and development work (Apache, PHP, git, etc...). I exclusively develop code that eventually get hosted in a Linux server. So I was thinking to create a virtual Linux instance and run all of my development work there, and keep my main Windows install "clean" for other everyday computing without all the servers and random background processes "pollution".

  So, what is your take/experience? interested to know how everyone manages their local setup!
from:
  name: Mohamed Eltantawi
  id: '10160105091695314'
type: status
created_time: '2017-04-19T12:36:52+0000'
updated_time: '2017-04-20T10:50:32+0000'
permalink_url: https://www.facebook.com/groups/egyptian.geeks/permalink/1458757230830647/
id: '172338516139198_1458757230830647'
reactions:
  data:
  - id: '10213109008032575'
    name: Amr AbuMuslim
    type: LIKE
  - id: '1487671784675336'
    name: Mohamad Emad
    type: LIKE
  - id: '1596110217148252'
    name: Ahmed Badawy
    type: LIKE
  - id: '293191737870658'
    name: Ahmed Gamal
    type: LIKE
  - id: '10156266511868081'
    name: Ahmed Zain Mohammed
    type: LIKE
  - id: '1771331073174421'
    name: Dalia Ihab
    type: LIKE
  paging:
    cursors:
      before: TVRZAeE5USTBNelV6T0RveE5Ea3lOamcxTWpRNU9qSTFOREE1TmpFMk1UTT0ZD
      after: TVRBd01EQTRPVEkyTXpVM05qVTFPakUwT1RJMk1EVTJPVGc2TWpVME1EazJNVFl4TXc9PQZDZD
comments:
  data:
  - created_time: '2017-04-19T12:41:42+0000'
    from:
      name: Mohamed Gamal
      id: '10156096685587328'
    message: I used to dual boot my old laptop, using windows for personal stuff,
      and linux for work, and then I bought my extra expensive super cool laptop with
      512 gigs of SSD, that's why I'm using windows only for both.
    id: '1458762884163415'
  - created_time: '2017-04-19T12:54:09+0000'
    from:
      name: Muhammad Al Rabbani
      id: '586778644986720'
    message: VM for dev, with my home folder versioned on GITLAB. This is a Linux
      host with Linux VMs
    id: '1458774807495556'
  - created_time: '2017-04-19T12:55:25+0000'
    from:
      name: Muhammad Al Rabbani
      id: '586778644986720'
    message: Windows gets bloated and it doesn't get cleaned later even after uninstall.
      If you're using Eclipse, look up Che' which is a containerized IDE that runs
      in your browser.
    id: '1458776007495436'
  - created_time: '2017-04-19T12:57:46+0000'
    from:
      name: Haitham Shaddad
      id: '1591171607636188'
    message: "طيب ده حاجه ال PHP صغيره وخفيفه ومش بتاثر قوي على الجهاز \nانا عندي
      مثلا visual studio 2017 و 2015 ودوول لوحدهم واخدين اكتر من 35 جيجا على C\nشغل
      ال SharePoint ده لوحده قصه تانيه وعامل VM ليه لأن مينفعش غير كده \nاي حاجه تانيه
      حاطها على الpc برده"
    id: '1458777384161965'
  - created_time: '2017-04-19T13:40:34+0000'
    from:
      name: Ahmad Hisham
      id: '10159889607765058'
    message: |-
      A VM is an excellent choice, my recommendation is to invest a little time in learning Docker and make your staging machine a separate VM that has little to no installed packages other than the pre-requisites for the production environment.
      It is very important to develop with production deployment in mind, I've seen many issues in deployment that could have been avoided if the dev team thought for 2 seconds on how this will be deployed on the production.
    id: '1458812360825134'
  - created_time: '2017-04-19T14:54:27+0000'
    from:
      name: Ahmed Ghorab
      id: '2053863088178362'
    message: vagrant and homestead box should be sufficient
    id: '1458871394152564'
  - created_time: '2017-04-19T16:14:33+0000'
    from:
      name: Yehia Abed
      id: '10156113005586031'
    message: VM is the best choice ;)
    id: '1458949260811444'
  - created_time: '2017-04-19T18:04:13+0000'
    from:
      name: Hassan Aly Selim
      id: '10156089336182292'
    message: |-
      I put everything in one environment (and I'm experimenting with putting some dev stuff in the new Linux environment in Win10).
      I try to stay away from bloated dev systems, and if something adds itself as a windows service I either give it a delayed startup or manual startup (ex: MySQL, I set it to manual startup because I rarely use it, even MSSQL isn't in my startup cause I use its LocalDB).
      I'm also a slightly minimalistic with my everyday environment, and mostly install either lightweight or portable stuff (with the exception of Steam).

      I think the days of having programs that inject themselves into the system and messing it up forever is over.
    id: '1459033990802971'
  - created_time: '2017-04-19T18:56:23+0000'
    from:
      name: Ahmed Badawy
      id: '1596110217148252'
    message: "I always use Docker & vagrant. \nEvery thing is separated..."
    id: '1459079484131755'
  - created_time: '2017-04-19T19:05:04+0000'
    from:
      name: Mahmoud Adas
      id: '1555354924540360'
    message: |-
      I use mac, so i dont have games
      Everything is for coding
      قصة قصيره حزينه
    id: '1459084964131207'
  - created_time: '2017-04-19T23:00:57+0000'
    from:
      name: Nour Galaby
      id: '10212923578377489'
    message: I used to dual boot but that sucks then I hate restarts ( who doesn't),
      I also hated VMs because I can't handle slow response. but then I found the
      best solution that balances both which is a VM but connect to it via SSH, that
      way you avoid the clumpy user interface of a VM and avoid restarting.
    id: '1459248254114878'
  - created_time: '2017-04-20T03:07:23+0000'
    from:
      name: Ahmed Aboulenein
      id: '10160047384135438'
    message: |-
      Probably not the best setup but just for sharing:
      1. Mac: IDE, source code, email, browsers and productivity tools (and yes no games but still have facebook, haha).
      2. Linux VM: Another copy of source code, build, testing, run/servers.
      Source code is synced between the two directories on Mac and Linux VM.
    id: '1459427250763645'
  - created_time: '2017-04-20T06:36:51+0000'
    from:
      name: Mohamed Eltantawi
      id: '10160105091695314'
    message: 'Feedback: Got an Ubuntu 17.04 VM up and running, running a quite intense
      Grunt build script on one of my projects is MUCH faster! although I am using
      the same SSD to store the virtual machine as the one I was using to store the
      project on Windows. I am taking about ~50% less time running the Grunt tasks
      (5 seconds vs 9). Quite happy with that setup, not to mention it is easier and
      automated now to stay on the bleeding edge of Apache, PHP, MariaDB, etc... (a
      bit more hassle to update these on Windows).'
    id: '1459573850748985'
  - created_time: '2017-04-20T07:55:27+0000'
    from:
      name: M Sameh El Harty
      id: '10159983801460392'
    message: |-
      Windows for personal plus office (email), linux vm for dev. I use the vm as a web server only I don't even load gnome or unity to keep the vm's memory requirement low (1gb could go down to 512mb).

      Sublime, everything else on windows.
    id: '1459632434076460'
  paging:
    cursors:
      before: WTI5dGJXVnVkRjlqZAFhKemIzSTZANVFExT0RjMk1qZAzROREUyTXpReE5Ub3hORGt5TmpBMU56QXkZD
      after: WTI5dGJXVnVkRjlqZAFhKemIzSTZANVFExT1RZAek1qUXpOREEzTmpRMk1Eb3hORGt5TmpjME9USTQZD
